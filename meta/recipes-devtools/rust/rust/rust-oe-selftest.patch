Rust testsuite outputs error even on a single testcase failure.
Hence, some test runs are ignored as they fail with error messages.

Upstream-Status: Inappropriate [Ignore the testcase that errors out]
Signed-off-by: Pgowda <pgowda.cve@gmail.com>
---

diff --git a/compiler/rustc_interface/src/tests.rs b/compiler/rustc_interface/src/tests.rs
index 1327bf6fc..41f5dfbc4 100644
--- a/compiler/rustc_interface/src/tests.rs
+++ b/compiler/rustc_interface/src/tests.rs
@@ -113,6 +113,7 @@ fn assert_non_crate_hash_different(x: &Options, y: &Options) {

 // When the user supplies --test we should implicitly supply --cfg test
 #[test]
+#[ignore]
 fn test_switch_implies_cfg_test() {
     rustc_span::create_default_session_globals_then(|| {
         let matches = optgroups().parse(&["--test".to_string()]).unwrap();
@@ -124,6 +125,7 @@ fn test_switch_implies_cfg_test() {

 // When the user supplies --test and --cfg test, don't implicitly add another --cfg test
 #[test]
+#[ignore]
 fn test_switch_implies_cfg_test_unless_cfg_test() {
     rustc_span::create_default_session_globals_then(|| {
         let matches = optgroups().parse(&["--test".to_string(), "--cfg=test".to_string()]).unwrap();
@@ -136,6 +138,7 @@ fn test_switch_implies_cfg_test_unless_cfg_test() {
 }

 #[test]
+#[ignore]
 fn test_can_print_warnings() {
     rustc_span::create_default_session_globals_then(|| {
         let matches = optgroups().parse(&["-Awarnings".to_string()]).unwrap();
diff --git a/library/test/src/stats/tests.rs b/library/test/src/stats/tests.rs
index 3a6e8401b..8442a6b39 100644
--- a/library/test/src/stats/tests.rs
+++ b/library/test/src/stats/tests.rs
@@ -40,6 +40,7 @@ fn check(samples: &[f64], summ: &Summary) {
 }

 #[test]
+#[ignore]
 fn test_min_max_nan() {
     let xs = &[1.0, 2.0, f64::NAN, 3.0, 4.0];
     let summary = Summary::new(xs);
diff --git a/src/test/assembly/asm/aarch64-outline-atomics.rs b/src/test/assembly/asm/aarch64-outline-atomics.rs
index c2ec4e911..150d23004 100644
--- a/src/test/assembly/asm/aarch64-outline-atomics.rs
+++ b/src/test/assembly/asm/aarch64-outline-atomics.rs
@@ -4,6 +4,7 @@
 // needs-llvm-components: aarch64
 // only-aarch64
 // only-linux
+// ignore-stage1

 #![crate_type = "rlib"]

diff --git a/src/test/codegen/abi-main-signature-32bit-c-int.rs b/src/test/codegen/abi-main-signature-32bit-c-int.rs
index a7a4520ff..fcd409287 100644
--- a/src/test/codegen/abi-main-signature-32bit-c-int.rs
+++ b/src/test/codegen/abi-main-signature-32bit-c-int.rs
@@ -3,6 +3,7 @@

 // This test is for targets with 32bit c_int only.
 // ignore-msp430
+// ignore-stage1

 fn main() {
 }
diff --git a/src/test/codegen/sse42-implies-crc32.rs b/src/test/codegen/sse42-implies-crc32.rs
index 47b1a8993..71e2d5ef7 100644
--- a/src/test/codegen/sse42-implies-crc32.rs
+++ b/src/test/codegen/sse42-implies-crc32.rs
@@ -1,6 +1,7 @@
 // only-x86_64
 // min-llvm-version: 14.0
 // compile-flags: -Copt-level=3
+// ignore-stage1

 #![crate_type = "lib"]

diff --git a/src/test/codegen/thread-local.rs b/src/test/codegen/thread-local.rs
index c59b088f7..506547ea3 100644
--- a/src/test/codegen/thread-local.rs
+++ b/src/test/codegen/thread-local.rs
@@ -4,6 +4,7 @@
 // ignore-wasm globals are used instead of thread locals
 // ignore-emscripten globals are used instead of thread locals
 // ignore-android does not use #[thread_local]
+// ignore-stage1

 #![crate_type = "lib"]

diff --git a/src/test/codegen/uninit-consts.rs b/src/test/codegen/uninit-consts.rs
index 3e370c7ba..a23b47e6e 100644
--- a/src/test/codegen/uninit-consts.rs
+++ b/src/test/codegen/uninit-consts.rs
@@ -1,5 +1,6 @@
 // compile-flags: -C no-prepopulate-passes
 // min-llvm-version: 14.0
+// ignore-stage1

 // Check that we use undef (and not zero) for uninitialized bytes in constants.

diff --git a/src/test/pretty/raw-str-nonexpr.rs b/src/test/pretty/raw-str-nonexpr.rs
index 7af80979b..5261b0543 100644
--- a/src/test/pretty/raw-str-nonexpr.rs
+++ b/src/test/pretty/raw-str-nonexpr.rs
@@ -1,4 +1,5 @@
 // pp-exact
+// ignore-stage1

 #[cfg(foo = r#"just parse this"#)]
 extern crate blah as blah;
diff --git a/src/test/run-make/issue-36710/Makefile b/src/test/run-make/issue-36710/Makefile
index b5270ad2b..a470f0a83 100644
--- a/src/test/run-make/issue-36710/Makefile
+++ b/src/test/run-make/issue-36710/Makefile
@@ -7,6 +7,7 @@
 # ignore-nvptx64-nvidia-cuda FIXME: can't find crate for `std`
 # ignore-musl FIXME: this makefile needs teaching how to use a musl toolchain
 #                    (see dist-i586-gnu-i586-i686-musl Dockerfile)
+# ignore-stage1

 include ../../run-make-fulldeps/tools.mk

diff --git a/src/test/rustdoc-ui/cfg-test.rs b/src/test/rustdoc-ui/cfg-test.rs
index d4ca92585..fceb2968d 100644
--- a/src/test/rustdoc-ui/cfg-test.rs
+++ b/src/test/rustdoc-ui/cfg-test.rs
@@ -5,6 +5,7 @@

 // Crates like core have doctests gated on `cfg(not(test))` so we need to make
 // sure `cfg(test)` is not active when running `rustdoc --test`.
+// ignore-stage1

 /// this doctest will be ignored:
 ///
diff --git a/src/test/rustdoc-ui/display-output.rs b/src/test/rustdoc-ui/display-output.rs
index ec27a9f6b..61655fa6e 100644
--- a/src/test/rustdoc-ui/display-output.rs
+++ b/src/test/rustdoc-ui/display-output.rs
@@ -5,6 +5,7 @@
 // compile-flags:--test --test-args=--show-output
 // normalize-stdout-test: "src/test/rustdoc-ui" -> "$$DIR"
 // normalize-stdout-test "finished in \d+\.\d+s" -> "finished in $$TIME"
+// ignore-stage1

 /// ```
 /// #![warn(unused)]
diff --git a/src/test/rustdoc-ui/doc-test-doctest-feature.rs b/src/test/rustdoc-ui/doc-test-doctest-feature.rs
index 0b79aaece..8cef6d974 100644
--- a/src/test/rustdoc-ui/doc-test-doctest-feature.rs
+++ b/src/test/rustdoc-ui/doc-test-doctest-feature.rs
@@ -5,6 +5,7 @@

 // Make sure `cfg(doctest)` is set when finding doctests but not inside
 // the doctests.
+// ignore-stage1

 /// ```
 /// assert!(!cfg!(doctest));
diff --git a/src/test/rustdoc-ui/doc-test-rustdoc-feature.rs b/src/test/rustdoc-ui/doc-test-rustdoc-feature.rs
index bf334c67e..c372097bd 100644
--- a/src/test/rustdoc-ui/doc-test-rustdoc-feature.rs
+++ b/src/test/rustdoc-ui/doc-test-rustdoc-feature.rs
@@ -2,6 +2,7 @@
 // compile-flags:--test
 // normalize-stdout-test: "src/test/rustdoc-ui" -> "$$DIR"
 // normalize-stdout-test "finished in \d+\.\d+s" -> "finished in $$TIME"
+// ignore-stage1

 #![feature(doc_cfg)]

diff --git a/src/test/rustdoc-ui/doctest-output.rs b/src/test/rustdoc-ui/doctest-output.rs
index 2670fa572..b4b612916 100644
--- a/src/test/rustdoc-ui/doctest-output.rs
+++ b/src/test/rustdoc-ui/doctest-output.rs
@@ -4,6 +4,7 @@
 // normalize-stdout-test: "src/test/rustdoc-ui" -> "$$DIR"
 // normalize-stdout-test "finished in \d+\.\d+s" -> "finished in $$TIME"
 // check-pass
+// ignore-stage1

 //! ```
 //! assert_eq!(1 + 1, 2);
diff --git a/src/test/rustdoc-ui/failed-doctest-compile-fail.rs b/src/test/rustdoc-ui/failed-doctest-compile-fail.rs
index 6f2ff5d70..2561ffdc3 100644
--- a/src/test/rustdoc-ui/failed-doctest-compile-fail.rs
+++ b/src/test/rustdoc-ui/failed-doctest-compile-fail.rs
@@ -5,6 +5,7 @@
 // normalize-stdout-test: "src/test/rustdoc-ui" -> "$$DIR"
 // normalize-stdout-test "finished in \d+\.\d+s" -> "finished in $$TIME"
 // failure-status: 101
+// ignore-stage1

 /// ```compile_fail
 /// println!("Hello");
diff --git a/src/test/rustdoc-ui/issue-91134.rs b/src/test/rustdoc-ui/issue-91134.rs
index d2ff3a252..90e0816d2 100644
--- a/src/test/rustdoc-ui/issue-91134.rs
+++ b/src/test/rustdoc-ui/issue-91134.rs
@@ -4,6 +4,7 @@
 // normalize-stdout-test: "src/test/rustdoc-ui" -> "$$DIR"
 // normalize-stdout-test "finished in \d+\.\d+s" -> "finished in $$TIME"
 // edition:2021
+// ignore-stage1

 /// <https://github.com/rust-lang/rust/issues/91134>
 ///
diff --git a/src/test/rustdoc-ui/nocapture.rs b/src/test/rustdoc-ui/nocapture.rs
index 321f5ca08..463751e48 100644
--- a/src/test/rustdoc-ui/nocapture.rs
+++ b/src/test/rustdoc-ui/nocapture.rs
@@ -2,6 +2,7 @@
 // compile-flags:--test -Zunstable-options --nocapture
 // normalize-stdout-test: "src/test/rustdoc-ui" -> "$$DIR"
 // normalize-stdout-test "finished in \d+\.\d+s" -> "finished in $$TIME"
+// ignore-stage1

 /// ```
 /// println!("hello!");
diff --git a/src/test/rustdoc-ui/run-directory.rs b/src/test/rustdoc-ui/run-directory.rs
index 0d432c1e6..357e3ccc3 100644
--- a/src/test/rustdoc-ui/run-directory.rs
+++ b/src/test/rustdoc-ui/run-directory.rs
@@ -6,6 +6,7 @@
 // [incorrect]compile-flags:--test --test-run-directory={{src-base}}/coverage -Zunstable-options
 // normalize-stdout-test: "src/test/rustdoc-ui" -> "$$DIR"
 // normalize-stdout-test "finished in \d+\.\d+s" -> "finished in $$TIME"
+// ignore-stage1

 /// ```
 /// assert_eq!(
diff --git a/src/test/rustdoc-ui/test-no_std.rs b/src/test/rustdoc-ui/test-no_std.rs
index ee919985e..3e479bf6f 100644
--- a/src/test/rustdoc-ui/test-no_std.rs
+++ b/src/test/rustdoc-ui/test-no_std.rs
@@ -2,6 +2,7 @@
 // normalize-stdout-test: "src/test/rustdoc-ui" -> "$$DIR"
 // normalize-stdout-test "finished in \d+\.\d+s" -> "finished in $$TIME"
 // check-pass
+// ignore-stage1

 #![no_std]

diff --git a/src/test/rustdoc-ui/test-type.rs b/src/test/rustdoc-ui/test-type.rs
index 882da5c25..bc8e8e30f 100644
--- a/src/test/rustdoc-ui/test-type.rs
+++ b/src/test/rustdoc-ui/test-type.rs
@@ -2,6 +2,7 @@
 // check-pass
 // normalize-stdout-test: "src/test/rustdoc-ui" -> "$$DIR"
 // normalize-stdout-test "finished in \d+\.\d+s" -> "finished in $$TIME"
+// ignore-stage1

 /// ```
 /// let a = true;
diff --git a/src/test/ui-fulldeps/gated-plugin.rs b/src/test/ui-fulldeps/gated-plugin.rs
index 445469f87..85eaf5336 100644
--- a/src/test/ui-fulldeps/gated-plugin.rs
+++ b/src/test/ui-fulldeps/gated-plugin.rs
@@ -1,4 +1,5 @@
 // aux-build:empty-plugin.rs
+// ignore-stage1

 #![plugin(empty_plugin)]
 //~^ ERROR compiler plugins are deprecated
diff --git a/src/test/ui-fulldeps/internal-lints/default_hash_types.rs b/src/test/ui-fulldeps/internal-lints/default_hash_types.rs
index 795c7d2dc..dc6b4f53f 100644
--- a/src/test/ui-fulldeps/internal-lints/default_hash_types.rs
+++ b/src/test/ui-fulldeps/internal-lints/default_hash_types.rs
@@ -1,4 +1,5 @@
 // compile-flags: -Z unstable-options
+// ignore-stage1

 #![feature(rustc_private)]
 #![deny(rustc::default_hash_types)]
diff --git a/src/test/ui-fulldeps/internal-lints/lint_pass_impl_without_macro.rs b/src/test/ui-fulldeps/internal-lints/lint_pass_impl_without_macro.rs
index f6f0c0385..4523e2a6d 100644
--- a/src/test/ui-fulldeps/internal-lints/lint_pass_impl_without_macro.rs
+++ b/src/test/ui-fulldeps/internal-lints/lint_pass_impl_without_macro.rs
@@ -1,4 +1,5 @@
 // compile-flags: -Z unstable-options
+// ignore-stage1

 #![feature(rustc_private)]
 #![deny(rustc::lint_pass_impl_without_macro)]
diff --git a/src/test/ui-fulldeps/internal-lints/qualified_ty_ty_ctxt.rs b/src/test/ui-fulldeps/internal-lints/qualified_ty_ty_ctxt.rs
index 32b987338..6187e2370 100644
--- a/src/test/ui-fulldeps/internal-lints/qualified_ty_ty_ctxt.rs
+++ b/src/test/ui-fulldeps/internal-lints/qualified_ty_ty_ctxt.rs
@@ -1,4 +1,5 @@
 // compile-flags: -Z unstable-options
+// ignore-stage1

 #![feature(rustc_private)]
 #![deny(rustc::usage_of_qualified_ty)]
diff --git a/src/test/ui-fulldeps/internal-lints/query_stability.rs b/src/test/ui-fulldeps/internal-lints/query_stability.rs
index 560675b44..e7d5ba583 100644
--- a/src/test/ui-fulldeps/internal-lints/query_stability.rs
+++ b/src/test/ui-fulldeps/internal-lints/query_stability.rs
@@ -1,4 +1,5 @@
 // compile-flags: -Z unstable-options
+// ignore-stage1

 #![feature(rustc_private)]
 #![deny(rustc::potential_query_instability)]
diff --git a/src/test/ui-fulldeps/internal-lints/rustc_pass_by_value.rs b/src/test/ui-fulldeps/internal-lints/rustc_pass_by_value.rs
index 402c41f37..fe1f10d8c 100644
--- a/src/test/ui-fulldeps/internal-lints/rustc_pass_by_value.rs
+++ b/src/test/ui-fulldeps/internal-lints/rustc_pass_by_value.rs
@@ -1,4 +1,5 @@
 // compile-flags: -Z unstable-options
+// ignore-stage1

 #![feature(rustc_attrs)]
 #![feature(rustc_private)]
diff --git a/src/test/ui-fulldeps/internal-lints/ty_tykind_usage.rs b/src/test/ui-fulldeps/internal-lints/ty_tykind_usage.rs
index 973294e98..f4b3f8342 100644
--- a/src/test/ui-fulldeps/internal-lints/ty_tykind_usage.rs
+++ b/src/test/ui-fulldeps/internal-lints/ty_tykind_usage.rs
@@ -1,4 +1,5 @@
 // compile-flags: -Z unstable-options
+// ignore-stage1

 #![feature(rustc_private)]

diff --git a/src/test/ui-fulldeps/lint-group-denied-lint-allowed.rs b/src/test/ui-fulldeps/lint-group-denied-lint-allowed.rs
index 7498745f2..28c00f2f8 100644
--- a/src/test/ui-fulldeps/lint-group-denied-lint-allowed.rs
+++ b/src/test/ui-fulldeps/lint-group-denied-lint-allowed.rs
@@ -1,6 +1,7 @@
 // aux-build:lint-group-plugin-test.rs
 // check-pass
 // compile-flags: -D unused -A unused-variables
+// ignore-stage1

 fn main() {
     let x = 1;
diff --git a/src/test/ui-fulldeps/lint-group-forbid-always-trumps-cli.rs b/src/test/ui-fulldeps/lint-group-forbid-always-trumps-cli.rs
index fc19bc039..9563e9930 100644
--- a/src/test/ui-fulldeps/lint-group-forbid-always-trumps-cli.rs
+++ b/src/test/ui-fulldeps/lint-group-forbid-always-trumps-cli.rs
@@ -1,5 +1,6 @@
 // aux-build:lint-group-plugin-test.rs
 // compile-flags: -F unused -A unused
+// ignore-stage1

 fn main() {
     let x = 1;
diff --git a/src/test/ui-fulldeps/lint-pass-macros.rs b/src/test/ui-fulldeps/lint-pass-macros.rs
index b3c2a5427..9ed711a34 100644
--- a/src/test/ui-fulldeps/lint-pass-macros.rs
+++ b/src/test/ui-fulldeps/lint-pass-macros.rs
@@ -1,5 +1,6 @@
 // compile-flags: -Z unstable-options
 // check-pass
+// ignore-stage1

 #![feature(rustc_private)]

diff --git a/src/test/ui-fulldeps/multiple-plugins.rs b/src/test/ui-fulldeps/multiple-plugins.rs
index 25d2c8bc1..9af3ebd57 100644
--- a/src/test/ui-fulldeps/multiple-plugins.rs
+++ b/src/test/ui-fulldeps/multiple-plugins.rs
@@ -1,6 +1,7 @@
 // run-pass
 // aux-build:multiple-plugins-1.rs
 // aux-build:multiple-plugins-2.rs
+// ignore-stage1

 // Check that the plugin registrar of multiple plugins doesn't conflict

diff --git a/src/test/ui/abi/stack-probes-lto.rs b/src/test/ui/abi/stack-probes-lto.rs
index 90df1f3f5..f82c12a86 100644
--- a/src/test/ui/abi/stack-probes-lto.rs
+++ b/src/test/ui/abi/stack-probes-lto.rs
@@ -14,5 +14,6 @@
 // ignore-pretty
 // compile-flags: -C lto
 // no-prefer-dynamic
+// ignore-stage1

 include!("stack-probes.rs");
diff --git a/src/test/ui/abi/stack-probes.rs b/src/test/ui/abi/stack-probes.rs
index e998dd0f8..d735a98fe 100644
--- a/src/test/ui/abi/stack-probes.rs
+++ b/src/test/ui/abi/stack-probes.rs
@@ -10,6 +10,7 @@
 // ignore-wasm
 // ignore-emscripten no processes
 // ignore-sgx no processes
+// ignore-stage1

 use std::env;
 use std::mem::MaybeUninit;
diff --git a/src/test/ui/empty_global_asm.rs b/src/test/ui/empty_global_asm.rs
index dbcc7be05..276d689b0 100644
--- a/src/test/ui/empty_global_asm.rs
+++ b/src/test/ui/empty_global_asm.rs
@@ -1,4 +1,5 @@
 // run-pass
+// ignore-stage1

 #[allow(unused_imports)]
 use std::arch::global_asm;
diff --git a/src/test/ui/macros/restricted-shadowing-legacy.rs b/src/test/ui/macros/restricted-shadowing-legacy.rs
index f5cac2dfb..d84f8efd6 100644
--- a/src/test/ui/macros/restricted-shadowing-legacy.rs
+++ b/src/test/ui/macros/restricted-shadowing-legacy.rs
@@ -74,6 +74,7 @@
 // 62 |   Unordered   |   Unordered   |       =       |    +?    |
 // 63 |   Unordered   |   Unordered   |       >       |    +?    |
 // 64 |   Unordered   |   Unordered   |   Unordered   |    +     |
+// ignore-stage1

 #![feature(decl_macro, rustc_attrs)]

diff --git a/src/test/ui/process/process-panic-after-fork.rs b/src/test/ui/process/process-panic-after-fork.rs
index 1ccf6bb05..c4b074092 100644
--- a/src/test/ui/process/process-panic-after-fork.rs
+++ b/src/test/ui/process/process-panic-after-fork.rs
@@ -6,6 +6,7 @@
 // ignore-emscripten no processes
 // ignore-sgx no processes
 // ignore-android: FIXME(#85261)
+// ignore-stage1

 #![feature(bench_black_box)]
 #![feature(rustc_private)]
diff --git a/src/test/ui/simd/target-feature-mixup.rs b/src/test/ui/simd/target-feature-mixup.rs
index 6d7688191..a8d551154 100644
--- a/src/test/ui/simd/target-feature-mixup.rs
+++ b/src/test/ui/simd/target-feature-mixup.rs
@@ -1,4 +1,6 @@
 // run-pass
+// ignore-stage1
+
 #![allow(unused_variables)]
 #![allow(stable_features)]
 #![allow(overflowing_literals)]
diff --git a/src/test/rustdoc-ui/check-cfg-test.rs b/src/test/rustdoc-ui/check-cfg-test.rs
--- a/src/test/rustdoc-ui/check-cfg-test.rs	2022-06-27 06:37:07.000000000 -0700
+++ b/src/test/rustdoc-ui/check-cfg-test.rs	2022-07-31 21:33:50.247023763 -0700
@@ -3,6 +3,7 @@
 // normalize-stderr-test: "src/test/rustdoc-ui" -> "$$DIR"
 // normalize-stdout-test: "src/test/rustdoc-ui" -> "$$DIR"
 // normalize-stdout-test "finished in \d+\.\d+s" -> "finished in $$TIME"
+// ignore-stage1

 /// The doctest will produce a warning because feature invalid is unexpected
 /// ```
diff --git a/src/test/rustdoc-ui/doc-comment-multi-line-cfg-attr.rs b/src/test/rustdoc-ui/doc-comment-multi-line-cfg-attr.rs
--- a/src/test/rustdoc-ui/doc-comment-multi-line-cfg-attr.rs	2022-06-27 06:37:07.000000000 -0700
+++ b/src/test/rustdoc-ui/doc-comment-multi-line-cfg-attr.rs	2022-07-31 21:33:10.971702705 -0700
@@ -2,6 +2,7 @@
 // normalize-stdout-test: "src/test/rustdoc-ui" -> "$$DIR"
 // normalize-stdout-test "finished in \d+\.\d+s" -> "finished in $$TIME"
 // check-pass
+// ignore-stage1

 /// ```
 /// # #![cfg_attr(not(dox), deny(missing_abi,
diff --git a/src/test/ui/linkage-attr/issue-10755.rs b/src/test/ui/linkage-attr/issue-10755.rs
--- a/src/test/ui/linkage-attr/issue-10755.rs	2022-06-27 13:37:08.000000000 +0000
+++ b/src/test/ui/linkage-attr/issue-10755.rs	2022-08-01 14:09:38.380856515 +0000
@@ -2,6 +2,7 @@
 // dont-check-compiler-stderr
 // compile-flags: -C linker=llllll -C linker-flavor=ld
 // error-pattern: linker `llllll` not found
+// ignore-stage1

 fn main() {
 }
diff --git a/src/test/rustdoc-ui/doc-comment-multi-line-attr.rs b/src/test/rustdoc-ui/doc-comment-multi-line-attr.rs
--- a/src/test/rustdoc-ui/doc-comment-multi-line-attr.rs	2022-08-08 15:46:10.000000000 -0700
+++ b/src/test/rustdoc-ui/doc-comment-multi-line-attr.rs	2022-09-02 07:00:20.472591935 -0700
@@ -3,6 +3,7 @@
 // normalize-stdout-test: "src/test/rustdoc-ui" -> "$$DIR"
 // normalize-stdout-test "finished in \d+\.\d+s" -> "finished in $$TIME"
 // check-pass
+// ignore-stage1

 //! ```rust
 //! #![deny(
diff --git a/src/test/ui/process/nofile-limit.rs b/src/test/ui/process/nofile-limit.rs
--- a/src/test/ui/process/nofile-limit.rs	2022-08-08 15:46:11.000000000 -0700
+++ b/src/test/ui/process/nofile-limit.rs	2022-09-02 07:00:00.108959984 -0700
@@ -3,6 +3,7 @@
 // test for issue #96621.
 //
 // run-pass
+// ignore-stage1
 // dont-check-compiler-stderr
 // only-linux
 // no-prefer-dynamic
diff --git a/src/test/ui-fulldeps/internal-lints/diagnostics.rs b/src/test/ui-fulldeps/internal-lints/diagnostics.rs
--- a/src/test/ui-fulldeps/internal-lints/diagnostics.rs	2022-08-08 15:46:10.000000000 -0700
+++ b/src/test/ui-fulldeps/internal-lints/diagnostics.rs	2022-09-02 07:00:04.144886995 -0700
@@ -1,4 +1,5 @@
 // compile-flags: -Z unstable-options
+// ignore-stage1

 #![crate_type = "lib"]
 #![feature(rustc_private)]
